ファイルが存在するにも関わらずJenkinsで認識されない場合、次の可能性が考えられます。以下を試し、エラーが解決するか確認してください。

1. Jenkinsの実行ユーザーによるファイルアクセス権確認

Jenkinsがファイルにアクセスできない可能性があります。以下のコマンドでファイルのアクセス権を確認し、必要に応じて適切な権限を付与します。

# ファイルのオーナーとパーミッションを確認
ls -l /jboss-cli-scripts/JAC-1.0.0.jar

# 必要であれば読み取り権限を付与
sudo chmod 644 /jboss-cli-scripts/JAC-1.0.0.jar

また、Jenkinsを実行しているユーザーが、ファイルにアクセスできるかを確認してください。

2. 絶対パスの確認と環境変数での設定

Jenkins内で環境変数を使って絶対パスを設定し、エラーが発生しないか試してみます。Jenkinsfileで以下のように設定してください。

environment {
    JAC_JAR_PATH = '/jboss-cli-scripts/JAC-1.0.0.jar'
}

steps {
    sh '''
    module add --name=com.turkcelltech.jac --resources=${JAC_JAR_PATH} --dependencies=com.turkcelltech.jac
    '''
}

3. --allow-nonexistent-resources オプションの付加

JenkinsのジョブによってはCLIがリソースファイルの検出をスキップしてしまうことがあるため、このオプションを追加してみます。CLIコマンドを以下のように実行してください。

module add --name=com.turkcelltech.jac --resources=${JAC_JAR_PATH} --dependencies=com.turkcelltech.jac --allow-nonexistent-resources

4. Jenkinsのワークスペースにファイルをコピー

Jenkinsのワークスペースにファイルをコピーし、ローカルパスで参照することも試してみてください。以下のように、ビルドの開始時にファイルをワークスペースにコピーするステップを追加し、CLI実行時にローカルパスで指定します。

steps {
    sh 'cp /jboss-cli-scripts/JAC-1.0.0.jar