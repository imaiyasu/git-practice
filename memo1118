ECSへ脆弱性診断を自動化するために、JenkinsパイプラインにAmazon Inspectorを組み込む手順を説明します。Amazon InspectorはECS上のコンテナをスキャンし、脆弱性や設定ミスを検出するためのツールです。以下の手順で、JenkinsパイプラインにInspectorの診断を追加します。

1. Amazon Inspectorの設定

1-1. Amazon Inspectorを有効化

	1.	AWS Management ConsoleでAmazon Inspectorのダッシュボードに移動し、Inspectorを有効化します。
	2.	ECSクラスターでの診断を有効化し、ECRのリポジトリもスキャン対象にします。

1-2. 必要なIAMロールとポリシー

	1.	InspectorがECS上でスキャンを実行できるよう、ECSタスクに適切なIAMロールを割り当てます。
	•	ロールにはAmazonInspector2ReadOnlyAccessなどの権限を付与します。
	2.	JenkinsでAWS APIを使用するために、JenkinsのAWS認証情報を設定します（例：AWS_CREDENTIALS_ID）。

2. JenkinsパイプラインにInspectorの診断ステージを追加

次に、JenkinsのパイプラインにInspector診断のためのステージを追加します。

2-1. Dockerイメージの登録後にInspectorの診断をトリガーする

JenkinsパイプラインのPush to ECRステージの直後に、Amazon Inspectorでスキャンを開始するステージを追加します。

2-2. Amazon Inspector Scan ステージの例

以下はInspector診断の実行ステージの一例です。

stage('Amazon Inspector Scan') {
    when {
        expression { IS_DEPLOY_SKIP != true }
    }
    steps {
        script {
            withCredentials([
                [$class: 'AmazonWebServicesCredentialsBinding',
                credentialsId: "${params.AWS_CREDENTIALS_ID}",
                accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']
            ]) {
                // Inspectorスキャンの開始
                sh """
                aws inspector2 start-scan --repository-name ${params.ECR_REPOSITORY} --image-tags ${awsTag} --region ${AWS_REGION}
                """
                
                // スキャン結果の確認 (オプションでリトライを設定)
                sh """
                aws inspector2 get-findings --repository-name ${params.ECR_REPOSITORY} --image-tags ${awsTag} --region ${AWS_REGION}
                """
            }
        }
    }
}

3. JenkinsパイプラインにAmazon Inspectorの結果をレポート

スキャン結果を取得し、脆弱性が検出された場合はJenkinsのビルドを失敗させる設定も可能です。aws inspector2 get-findingsコマンドを使用して、脆弱性を検出してレポートします。

4. 参考リンク

以下のAWSドキュメントでさらに詳細な設定が確認できます：

	•	Amazon Inspector 公式ドキュメント

これでパイプラインにInspector診断を追加する準備が整いました。